---
import HeaderLink from "./HeaderLink.astro";
---

<header>
  <nav>
    <div class="name">
      <h2>
        <a href="/">Jessa√≠<br />Maya</a>
      </h2>
    </div>
    <div class="hamburger-menu" id="hamburger-menu">
      <div class="bar"></div>
      <div class="bar"></div>
      <div class="bar"></div>
    </div>
    <div class="internal-links">
      <HeaderLink href="/" title="Home">Home</HeaderLink>
      <HeaderLink href="/projects" title="Projects">Projects</HeaderLink>
      <!-- <HeaderLink href="/blog" title="Articles">Articles</HeaderLink> -->
    </div>
    <div class="menu-list" id="menu-list">
      <button class="close-btn" id="close-btn">&times;</button>
      <HeaderLink href="/" title="Home">Home</HeaderLink>
      <HeaderLink href="/projects" title="Projects">Projects</HeaderLink>
      <!-- <HeaderLink href="/blog" title="Articles">Articles</HeaderLink> -->
    </div><div class="theme">
      <div class="theme-switch" id="theme-switcher">
        <div class="fill"></div>
      </div>
      <div class="circle"></div>
    </div>
  </nav>
</header>
<style>
  header {
    padding: 0 var(--space-s);
    background: transparent;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
    margin: auto;
  }
  h2 {
    margin: 0;
    display: inherit;
  }

  nav h2 a,
  nav h2 a.active {
    text-decoration: none;
    padding-left: 0;
    font-family: "Open Sans", sans-serif;
    font-weight: 300;
    font-size: var(--step-1);
  }
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: var(--space-l);
  }
  nav .name,
  nav .theme {
    flex: 1;
    display: flex;
  }
  nav .theme {
    justify-content: flex-end;
  }
  .internal-links {
    display: flex;
    flex: 3;
    justify-content: center;
    align-items: center;
  }
  nav a {
    font-size: var(--step-0);
    padding: var(--space-s) var(--space-m);
    color: var(--black);
    border-bottom: 3px solid transparent;
    text-decoration: none;
    font-family: "Open Sans", sans-serif;
    font-weight: 400;
  }
  nav a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }

  a.selected {
    font-weight: bold;
  }

  .theme {
    position: relative;
  }

  .circle {
    position: absolute;
    width: 300px;
    height: 300px;
    border: solid 1px var(--accent);
    border-radius: 50%;
    margin: 0 auto;
    top: -175px;
    right: -130px;
    z-index: -1;
    opacity: 0.3;
    float: right;
  }

  .theme-switch {
    border: solid 3px var(--accent);
    width: 25px;
    height: 25px;
    border-radius: 50%;
    position: relative;
    overflow: hidden;
    cursor: pointer;
  }
  .fill {
    background: var(--accent);
    width: 25px;
    height: 25px;
    border: none;
    transform: translate(5px, 5px) rotate(45deg);
  }
  .hamburger-menu {
    display: none;
    flex-direction: column;
    cursor: pointer;
  }
  .bar {
    width: 25px;
    height: 3px;
    background-color: var(--accent);
    margin: 4px 0;
    transition: 0.4s;
  }
  .menu-list {
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: -100%;
    width: 200px;
    height: 100%;
    z-index: 1;
    min-height: 100vh;
    background-color: var(--background);
    box-shadow: 2px 0 5px rgba(var(--black), 0.5);
    transition: left 0.3s ease;
  }
  .menu-list.show {
    left: 0;
  }
  .close-btn {
    align-self: flex-end;
    background: none;
    border: none;
    font-size: 2rem;
    cursor: pointer;
    margin: var(--space-s);
    color: var(--accent);
  }
  @media (max-width: 48rem) {
    .internal-links {
      display: none;
    }
    .hamburger-menu {
      display: flex;
    }
  }
</style>
<!-- Theme Switcher -->
<script is:inline>
  // Check if theme system is already initialized
  if (!window.themeInitialized) {
    window.themeInitialized = true;
    
    const enableTheme = (theme) => {
      document.documentElement.setAttribute("data-theme", theme);
      localStorage.setItem("theme", theme);
    };
    
    // Initialize theme
    const currentTheme = localStorage.getItem("theme");
    switch (currentTheme) {
      case "light":
        enableTheme("light");
        break;
      case "dark":
        enableTheme("dark");
        break;
      default:
        enableTheme("light");
        break;
    }
    
    // Store theme functions globally
    window.enableTheme = enableTheme;
  }
  
  // Set up this specific theme switcher
  document.addEventListener('DOMContentLoaded', () => {
    const themeSwitcher = document.getElementById("theme-switcher");
    if (themeSwitcher && !themeSwitcher.dataset.initialized) {
      themeSwitcher.dataset.initialized = "true";
      
      themeSwitcher.addEventListener("click", () => {
        const currentTheme = document.documentElement.getAttribute("data-theme");
        switch (currentTheme) {
          case "light":
            window.enableTheme("dark");
            break;
          case "dark":
          default:
            window.enableTheme("light");
            break;
        }
      });
    }
    
    // Set up hamburger menu (only once)
    const hamburgerMenu = document.getElementById("hamburger-menu");
    const closeBtn = document.getElementById("close-btn");
    
    if (hamburgerMenu && !hamburgerMenu.dataset.initialized) {
      hamburgerMenu.dataset.initialized = "true";
      
      hamburgerMenu.addEventListener("click", function () {
        const menuList = document.getElementById("menu-list");
        menuList.classList.toggle("show");
      });
    }
    
    if (closeBtn && !closeBtn.dataset.initialized) {
      closeBtn.dataset.initialized = "true";
      
      closeBtn.addEventListener("click", function () {
        const menuList = document.getElementById("menu-list");
        menuList.classList.remove("show");
      });
    }
    
    // Document click handler (only add once)
    if (!document.body.dataset.clickHandlerInitialized) {
      document.body.dataset.clickHandlerInitialized = "true";
      
      document.addEventListener("click", function (event) {
        const menuList = document.getElementById("menu-list");
        const hamburgerMenu = document.getElementById("hamburger-menu");
        if (
          menuList &&
          hamburgerMenu &&
          !menuList.contains(event.target) &&
          !hamburgerMenu.contains(event.target)
        ) {
          menuList.classList.remove("show");
        }
      });
    }
  });
</script>
